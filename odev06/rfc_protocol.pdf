CHATERS Protokol

Bu belge CHATERS Protokolünü kullanan Clientlar ve Serverlar tarafından kullanılar mesajlaşma protokolünü tanımlamak ve detaylandırmak amacıyla hazırlanmıştır. 

Özet


CHATERS Protokolü text bazlı bir mesajlaşma protokolü olup Transmission Control Protocol (TCP) üzerine inşa edilmiş bir protokoldür. İki temel kanalı olan protokolde Client-Client ve Client-Server haberleşmesi olmaktadır. İstek - Cevap temelli bir protokoldür.

Haberleşme içeriği olan mesaj text bazlıdır. Mesajın başlık kısmı, mesajın türünü tanımlar ve her mesajın beklenen cevap sayısı vardır. 

İçerik Tablosu

Giriş 
Mesaj Formatı
Client - Server Protokolü
Client - Server İstekleri
Client - Server Cevapları
Client - Client Protokolü
Client - Client İstekleri
Client - Server Cevapları

GİRİŞ

CHATERS bir haberleşme protokolü olup, 2 nokta arasındaki istek - cevap döngüsüne dayalı olarak işlemektedir. Tüm işlemler istek yapanın(isteğe başlayan) isteğini cevap verecek ilgiliye/ilgililere taşımakta ve cevap verecek ilgiliden/ilgililerden gelen cevabı, istekte bulunan noktaya taşımakla mümkün olmaktadır. CHATERS protokolü uygun bir yanıt alıncaya kadar yeni bir client isteğini kabul etmemektedir. Bu esnada gelecek istekler kuyruk yapısı ile bir sıraya konacaktır. 

Sadece CHATERS protokolü Clientları istekte bulunabileceklerdir. Serverlar pasif elemanlar olarak kabul edilecek olup, herhangi bir duruma dahil olmayan gibi görülecektir. Clientların ise durumları olacaktır. Bu durumlar meşgul, ulaşılabilir vb. şeklinde olacaktır.

İki client arasında iletişimin bir defa kurulmasından sonra tüm haberleşme herhangi bir müdahale gerektirmeden bu iki client arasında devam edebilecektir. Gönderilen isteğin ya da mesajın doğru clienta ulaştığından emin olmak için her mesajda bir “msgid” olmalıdır. Bu numaranın olmadığı mesajlar geçersiz sayılacaktır.


2. MESAJ FORMATI

2.1. CHATERS mesaj formatı  Client - Client ve Client - Server şeklindedir. 

2.2 CHATERS mesaj formatında header(başlık) ve body(gövde) kısmı bulunmaktadır Format aşağıdaki gibidir.

<HEADER> 
[Merhaba]
<BODY> 
2.2.1 HEADER kısmı mesajın yapacağı aksiyonu gösteren kısımdır ve aşağıdaki gibi detaylandırılmıştır.

Client - Server: Server Cevaplama

SRVROK: Server Cevabı OK
SRVERR: Server Hatası
Client - Server: Client İstekleri

CHBEAT: Client Hearbeat
CLOGIN: Client Giriş
CRGSTR: Client Kayıt 
COFFLN: Client Offline Chat
CPROFE: Client Profil Düzenleme
CFINDU: Client Kullanıcı bulma
CCNREQ: Client Contact İsteği
CCNRES: Client Contact İstek Cevabı
Client- Client : Client İstekleri

CCCHAT: Client-to-client Chat Mesaj
CCCHRQ: Client-to-client Chat İstek
CCCHRS: Client Chat İstek Cevabı
CCENDC: Client-to-client Chati Bitir
Client- Client : Client Cevapları

CCLACK: Client Acknowledge
CCLERR: Client Hatası

2.2.2 Mesajda başlık ve gövde kısmı boş bir satır ile birbirlerinden ayrılırlar. Body kısmı Javascript Object Notation (JSON, defined in http://www.json.org/) uymak zorunda ve her mesajlaşmada zorunlu ve isteğe bağlı kısımlar bulunacaktır, ayrıca her mesajın tipi JSON bünyesinde bir “anahtar-değer” çifti olarak tanımlanmalıdır.. Aşağıdaki örnek mesaj Client - Client arası mesajlaşmayı göstermektedir.

Her mesajın gövde kısmında bir msgid olması gerektiği belirtilmişti. BU msgid istek gönderen tarafından oluşturulan veya random olarak oluşturulan rakamlardan oluşabilir. Mesajlaşmanın olması için istek gönderen client tarafını tanımlamak ve verilen cevabın doğru isteğe gitmesi amacıyla bu id verilir.


CCCHAT
(CRLF)
{
    "msgid": 1234,
    "message": “Naber Gülüm?”
}

2.3. CHATERS Protokol mesajları Client - Server arasında ise TCP port 8544’ü, CLient- Client arasında ise 8545’i kullanarak iletilmelidir.

2.4. CHATERS Protokolü (CC-CC veya CC-PS) kesinlikle talep-yanıt protokolüdür. Her istek - cevap çifti için TCP bağlantısı açılıp, kapanır.

3. Client- Server Protokolü

Bu protokol, mesajlaşmak isteyen clientların servera kayıt olmalarını gerektiren bir protokoldür. Kaydı tanımlanmış clientlar server’ın veritabanındaki profil bilgilerine, iletişim bilgilerine, çevrimdışı mesajlaşma vb bilgilere ulaşabilir.
Server her mesaj için sadece ve sadece 1 cevap gönderir ve bu istekleri diğer clientlara vermez.

Client - Server arasındaki istek ve cevaplama protokolü şu şekildedir;

3.1 Client - Server İstekleri

CHBEAT : Client Heartbeat

Client tarafından Server’a yollanan ve hala çevrimiçi olup, mesajlara cevap beklediğini söyleyen komuttur. Son 30 saniyede herhangi bir çevrimiçi bildirim sinyali gelmezse serverlar Clientlara SRVROK veya SRVERR mesajı gönderir.


Request Header: CHBEAT

Request Fields: msgid

Beklenen cevap: SRVROK

Örnek:

CHBEAT

{
    "msgid": 14132
}

Örnek Cevap

SRVROK

{
    "msgid": 14132,
    "kisiler": [
        {
            "kullaniciid": “babaminoglu",
            "ip": "212.36.37.38",
            "status": "online",
            "profile": {
                "message": “Sadece babamin oglu kazanir",
                "location": "Istanbul, TR",
                "gender": “M",
                "nationality": "Turkey"
            }
        }, ...
    ],
    "inbox": [
        {
            "gonderenid": "babaminoglu",
            "date": "2012-12-23T15:00:00",
            "message": “Babamın diger oglu nasilsin?"
        }
    ],
    "requests": [
        {
            "gonderenid": "foouser",
            "date": "2012-12-24T16:00:00"
        }
    ]
}
CLOGIN : Client Login

Login olmak isteyen Clientların servera gönderdiği komuttur.

SRVROK cevabı vermesi beklenir ya da hata varsa SRVERR mesajını ve neden reddedildiğini açıklayan bir mesaj gönderir.


Request Header: CLOGIN

Request Fields:

kullaniciid: unicode string, username used for the login
password: unicode string, password for the login
Beklenen Cevap: SRVROK, SRVERR

İstek örneği

CLOGIN

{
    "msgid": 1234,
    "kullaniciid": "foobar",
    "password": "foopassword",
}
Cevap örneği

SRVROK

{
    "msgid": 1234,
    "message": “başarılı oldu babamın oglu"
}
CRGSTR : Client Register

Client’ın mesajlaşmaya dahil olmak için kayıt isteği göndermesidir.


İstek Header: CRGSTR 

İstek İçeriği:

email: geçerli bir e-mail adresi
kullaniciid: Bir kullanıcı adi.
name: Tam isim
password: Geçerli bir şifre
Beklenen Cevaplar: SRVROK, SRVERR

İstek Örneği

CRGSTR

{
    "msgid": 123412,
    "email": "foo@bar.com",
    "password": "foopass",
    "kullaniciid": "foobar",
    "name": "Babaminoglu"
}
Cevap Örneği

SRVROK

{
    "msgid": 123412,
    "message": “başarılı"
}
SRVERR

{
    "msgid": 123412,        
    "message": “Bu kullanıcı zaten alınmış.”
}
COFFLN : Client Send Offline Message

Servera gönderilen bu komut ile çevrimdışı olan veya şu anda mesaja cevap veremeyecek olan Clientlara mesaj gönderme isteğidir.

Eğer mesajı alacak olan Client çevrimdışı ise SRVROK mesajı gönderilir ama değilse SRVERR mesajı gönderilir.

İstek Header: COFFLN 

İstek İçeriği:

recipient: string, kullaniciid mesajı alacak olan kullanıcı
message: string, mesaj içeriği

İstek Örneği

COFFLN

{
    "msgid": 145132,
    "recipient": “babamindigeroglu",
    "message": “Eve gidince beni ara gardaş."
}
Örnek Cevaplama:

SRVROK

{
    "msgid": 145132
}
SRVERR

{
    "msgid": 145132,
    "message": "Server Error: Veri tabanı cevap vermiyor.”
}
CPROFE : Client Profile Edit

Servera gönderilen bu komut ile Client sistemde yer alan profil bilgilerini değiştirmek istemektedir.

İstek Header: CPROFE

İstek İçeriği:

profile: the profile object (as in CHBEAT response), containing the profile information for the user.
Beklenen cevaplar: SRVROK, SRVERR

İstek Örneği:

CPROFE

{
    "msgid": 156544,
    "profile": {
        "message": "livin la vida loca",
        "location": "the moon",
        "gender": "M",
        "nationality": "Turkish"
    }
}
Örnek Cevap:

SRVROK

{
    "msgid": 156544
}


CFINDU : Client Find User

Client’ın sistemde olan başka bir Client’ı aramak için kullandığı komuttur.Bu komuttu kullanarak aramak istediği kelime ile bu kelimenin içinde olduğu tüm sonuçlara ulaşmış olur. Sistemde var ise bu kullanıcı SRVROK mesajı gönderilir.

İstek Header: CFINDU

İstek İçeriği:

keyword: string, the keyword to perform the wildcard search on
Beklenen Cevap : SRVROK, SRVERR

İstek Örneği:

CFINDU

{
    "msgid": 146
    "keyword": "baz"
}
Örnek Cevap:

SRVROK

{
    "msgid": 146,
    "matches": [
        {
            "kullaniciid": "bazuser",
            "profile": {
                "location": "Cape Town, ZA",
                "gender": "M",
                "nationality": "Turkish",
                "message": "yay!"
            }
        }, ...
    ]
}


SRVROK

{
    "msgid": 146,
    "matches": []
}


CCNREQ: Client Contact Request

Bir Client’ın yeni bir Client ile iletişim oluşturması için gereken komuttur.

Bunun olması için gönderici ve alıcı Clientların sistemde yer alması gerekmektedir. Eğer alıcı kısım kabul ederse sonuç sorunsuz bir şekilde tamamlanır ve SRVROK mesajı gönderilir. Bunun için de alıcının kabulünü almak için CCNRES komutu kullanılır.

İstek Header: CCNREQ

İstek içeriği:

kullaniciid, the username of the requested (receiving) user
Beklenen Cevaplar: SRVROK, SRVERR

İStek Örneği:

CCNREQ

{
    "msgid": 433,
    "kullaniciid": "foouser"
}
Örnek Cevap

SRVROK

{
    "msgid": 433
}

Bu isteği aldıktan sonra server alıcı olan client ile CCNRES ile iletişime geçer.


CCNRES: Client Contact Request - Response

Alıcı Client’ın bağlanma isteğine verdiği cevaplar ACCEPT(Kabul)  veya DENY(Reddet) olabilir.

İstek Header: CCNRES

İstek İçeriği:

kullaniciid: Alıcının idsi
response: "accept" veya “deny"

Beklenen Cevaplar: SRVROK (Bağlantı kurulursa), SRVERR (Bir istek ortada yoksa)

İstek Örneği:

“bazuser" tarafından gönderilen bağlantı isteğine ACCEPT  cevabının verilmesi

CCNRES

{
    "msgid": 100,
    "kullaniciid": "bazuser",
    "response": "accept"
}
Örnek Cevap

SRVROK

{
    "msgid": 100
}
3.2 Client - Server Cevapları

SRVROK : Server Cevabı OK

Girilen komut sonucu, sonucun başarılı olduğunu bildirir.

SRVERR : Server Error

Girilen komut sonucu, sonucun başarılı bir şekilde olmadığını gösterir.


4. Client- Client Protokolü

Eşler arası bir haberleşme protokolü olduğundan dolayı CHATERS protokolünde istek-cevap şeklinde bir mesajlaşma dönmektedir clientlar arasında.




